{"ast":null,"code":"import _slicedToArray from \"/home/humza/Documents/afterflea/projects/drive-download-20230421T195214Z-001/script/OpenAI-Template.1.3-update-auth-signups (1)/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"value\", \"padding\", \"minHeight\", \"placeholder\", \"language\", \"className\", \"style\", \"rehypePlugins\", \"onChange\"];\nimport React, { useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { processHtml, htmlEncode } from './utils';\nimport shortcuts from './shortcuts';\nimport * as styles from './styles';\nimport \"./style/index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport * from './SelectionText';\nexport default /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'w-tc-editor' : _props$prefixCls,\n    _props$padding = props.padding,\n    padding = _props$padding === void 0 ? 10 : _props$padding,\n    _props$minHeight = props.minHeight,\n    minHeight = _props$minHeight === void 0 ? 16 : _props$minHeight,\n    placeholder = props.placeholder,\n    language = props.language,\n    className = props.className,\n    style = props.style,\n    rehypePlugins = props.rehypePlugins,\n    _onChange = props.onChange,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useState = useState(props.value || ''),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  useEffect(function () {\n    return setValue(props.value || '');\n  }, [props.value]);\n  var textRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return textRef.current;\n  });\n  var contentStyle = {\n    paddingTop: padding,\n    paddingRight: padding,\n    paddingBottom: padding,\n    paddingLeft: padding\n  };\n  var htmlStr = useMemo(function () {\n    return processHtml(\"<pre aria-hidden=true><code \" + (language ? \"class=\\\"language-\" + language + \"\\\"\" : '') + \" >\" + htmlEncode(String(value || '')) + \"</code><br /></pre>\", rehypePlugins);\n  }, [value, language, rehypePlugins]);\n  var preView = useMemo(function () {\n    return /*#__PURE__*/_jsx(\"div\", {\n      style: _extends({}, styles.editor, contentStyle, {\n        minHeight: minHeight\n      }),\n      className: prefixCls + \"-preview \" + (language ? \"language-\" + language : ''),\n      dangerouslySetInnerHTML: {\n        __html: htmlStr\n      }\n    });\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [prefixCls, language, htmlStr]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: _extends({}, styles.container, style),\n    className: prefixCls + \" \" + (className || ''),\n    children: [/*#__PURE__*/_jsx(\"textarea\", _extends({\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      spellCheck: \"false\",\n      autoCapitalize: \"off\"\n    }, other, {\n      placeholder: placeholder,\n      onKeyDown: function onKeyDown(evn) {\n        if (!other.onKeyDown || other.onKeyDown(evn) !== false) {\n          shortcuts(evn);\n        }\n      },\n      style: _extends({}, styles.editor, styles.textarea, contentStyle, {\n        minHeight: minHeight\n      }, placeholder && !value ? {\n        WebkitTextFillColor: 'inherit'\n      } : {}),\n      ref: textRef,\n      onChange: function onChange(evn) {\n        setValue(evn.target.value);\n        _onChange && _onChange(evn);\n      },\n      className: prefixCls + \"-text\",\n      value: value\n    })), preView]\n  });\n});","map":{"version":3,"sources":["../src/index.tsx"],"names":["React","useEffect","useImperativeHandle","useMemo","useRef","useState","processHtml","htmlEncode","shortcuts","styles","forwardRef","props","ref","prefixCls","padding","minHeight","placeholder","language","className","style","rehypePlugins","onChange","other","value","setValue","textRef","current","contentStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","htmlStr","String","preView","editor","__html","container","evn","onKeyDown","textarea","WebkitTextFillColor","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { PluggableList } from 'unified';\nimport { processHtml, htmlEncode } from './utils';\nimport shortcuts from './shortcuts';\nimport * as styles from './styles';\nimport './style/index.less';\n\nexport * from './SelectionText';\n\nexport interface TextareaCodeEditorProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  prefixCls?: string;\n  /**\n   * Set what programming language the code belongs to.\n   */\n  language?: string;\n  /**\n   * Optional padding for code. Default: `10`.\n   */\n  padding?: number;\n  /**\n   * rehypePlugins (Array.<Plugin>, default: `[[rehypePrism, { ignoreMissing: true }]]`)\n   * List of [rehype plugins](https://github.com/rehypejs/rehype/blob/main/doc/plugins.md#list-of-plugins) to use. See the next section for examples on how to pass options\n   */\n  rehypePlugins?: PluggableList;\n  /**\n   * The minimum height of the editor. Default: `16`.\n   */\n  minHeight?: number;\n  onKeyDown?: (event: React.KeyboardEvent<HTMLTextAreaElement>) => void | boolean;\n}\n\nexport default React.forwardRef<HTMLTextAreaElement, TextareaCodeEditorProps>((props, ref) => {\n  const {\n    prefixCls = 'w-tc-editor',\n    value: _,\n    padding = 10,\n    minHeight = 16,\n    placeholder,\n    language,\n    className,\n    style,\n    rehypePlugins,\n    onChange,\n    ...other\n  } = props;\n\n  const [value, setValue] = useState(props.value || '');\n  useEffect(() => setValue(props.value || ''), [props.value]);\n  const textRef = useRef<HTMLTextAreaElement>(null);\n  useImperativeHandle<HTMLTextAreaElement, HTMLTextAreaElement>(ref, () => textRef.current!);\n\n  const contentStyle = {\n    paddingTop: padding,\n    paddingRight: padding,\n    paddingBottom: padding,\n    paddingLeft: padding,\n  };\n\n  const htmlStr = useMemo(\n    () =>\n      processHtml(\n        `<pre aria-hidden=true><code ${language ? `class=\"language-${language}\"` : ''} >${htmlEncode(\n          String(value || ''),\n        )}</code><br /></pre>`,\n        rehypePlugins,\n      ),\n    [value, language, rehypePlugins],\n  );\n  const preView = useMemo(\n    () => (\n      <div\n        style={{ ...styles.editor, ...contentStyle, minHeight }}\n        className={`${prefixCls}-preview ${language ? `language-${language}` : ''}`}\n        dangerouslySetInnerHTML={{\n          __html: htmlStr,\n        }}\n      />\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [prefixCls, language, htmlStr],\n  );\n\n  return (\n    <div style={{ ...styles.container, ...style }} className={`${prefixCls} ${className || ''}`}>\n      <textarea\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        autoCapitalize=\"off\"\n        {...other}\n        placeholder={placeholder}\n        onKeyDown={(evn) => {\n          if (!other.onKeyDown || other.onKeyDown(evn) !== false) {\n            shortcuts(evn);\n          }\n        }}\n        style={{\n          ...styles.editor,\n          ...styles.textarea,\n          ...contentStyle,\n          minHeight,\n          ...(placeholder && !value ? { WebkitTextFillColor: 'inherit' } : {}),\n        }}\n        ref={textRef}\n        onChange={(evn) => {\n          setValue(evn.target.value);\n          onChange && onChange(evn);\n        }}\n        className={`${prefixCls}-text`}\n        value={value}\n      />\n      {preView}\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}