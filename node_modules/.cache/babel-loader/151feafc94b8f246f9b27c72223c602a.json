{"ast":null,"code":"import { stopPropagation } from './utils';\nimport { SelectionText } from './SelectionText';\nexport default function shortcuts(e) {\n  var api = new SelectionText(e.target);\n  if (e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    if (api.start === api.end) {\n      api.insertText('  ').position(api.start + 2, api.end + 2);\n    } else if (api.getSelectedValue().indexOf('\\n') > -1 && e.shiftKey) {\n      api.lineStarRemove('  ');\n    } else if (api.getSelectedValue().indexOf('\\n') > -1) {\n      api.lineStarInstert('  ');\n    } else {\n      api.insertText('  ').position(api.start + 2, api.end);\n    }\n    api.notifyChange();\n  } else if (e.code && e.code.toLowerCase() === 'enter') {\n    stopPropagation(e);\n    var indent = \"\\n\" + api.getIndentText();\n    api.insertText(indent).position(api.start + indent.length, api.start + indent.length);\n    api.notifyChange();\n  } else if (e.code && /^(quote|backquote|bracketleft|digit9|comma)$/.test(e.code.toLowerCase()) && api.getSelectedValue()) {\n    stopPropagation(e);\n    var val = api.getSelectedValue();\n    var txt = '';\n    switch (e.code.toLowerCase()) {\n      case 'quote':\n        txt = \"'\" + val + \"'\";\n        if (e.shiftKey) {\n          txt = \"\\\"\" + val + \"\\\"\";\n        }\n        break;\n      case 'backquote':\n        txt = \"`\" + val + \"`\";\n        break;\n      case 'bracketleft':\n        txt = \"[\" + val + \"]\";\n        if (e.shiftKey) {\n          txt = \"{\" + val + \"}\";\n        }\n        break;\n      case 'digit9':\n        txt = \"(\" + val + \")\";\n        break;\n      case 'comma':\n        txt = \"<\" + val + \">\";\n        break;\n    }\n    api.insertText(txt);\n    api.notifyChange();\n  }\n}","map":{"version":3,"sources":["../src/shortcuts.ts"],"names":["stopPropagation","SelectionText","shortcuts","e","api","target","code","toLowerCase","start","end","insertText","position","getSelectedValue","indexOf","shiftKey","lineStarRemove","lineStarInstert","notifyChange","indent","getIndentText","length","test","val","txt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { stopPropagation } from './utils';\nimport { SelectionText } from './SelectionText';\n\nexport default function shortcuts(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  const api = new SelectionText(e.target as HTMLTextAreaElement);\n  if (e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    if (api.start === api.end) {\n      api.insertText('  ').position(api.start + 2, api.end + 2);\n    } else if (api.getSelectedValue().indexOf('\\n') > -1 && e.shiftKey) {\n      api.lineStarRemove('  ');\n    } else if (api.getSelectedValue().indexOf('\\n') > -1) {\n      api.lineStarInstert('  ');\n    } else {\n      api.insertText('  ').position(api.start + 2, api.end);\n    }\n    api.notifyChange();\n  } else if (e.code && e.code.toLowerCase() === 'enter') {\n    stopPropagation(e);\n    const indent = `\\n${api.getIndentText()}`;\n    api.insertText(indent).position(api.start + indent.length, api.start + indent.length);\n    api.notifyChange();\n  } else if (\n    e.code &&\n    /^(quote|backquote|bracketleft|digit9|comma)$/.test(e.code.toLowerCase()) &&\n    api.getSelectedValue()\n  ) {\n    stopPropagation(e);\n    const val = api.getSelectedValue();\n    let txt = '';\n    switch (e.code.toLowerCase()) {\n      case 'quote':\n        txt = `'${val}'`;\n        if (e.shiftKey) {\n          txt = `\"${val}\"`;\n        }\n        break;\n      case 'backquote':\n        txt = `\\`${val}\\``;\n        break;\n      case 'bracketleft':\n        txt = `[${val}]`;\n        if (e.shiftKey) {\n          txt = `{${val}}`;\n        }\n        break;\n      case 'digit9':\n        txt = `(${val})`;\n        break;\n      case 'comma':\n        txt = `<${val}>`;\n        break;\n    }\n    api.insertText(txt);\n    api.notifyChange();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}